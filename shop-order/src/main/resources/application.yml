server:
  port: 9400

spring:
  # 配置数据库信息
  application:
    name: order
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource   # 指定数据源为druid
    druid:
      # 数据源配置
      username: root
      password: Password01!
      url: jdbc:mysql://39.106.110.85:13306/test?serverTimezone=GMT%2B8&characterEncoding=UTF-8&useSSL=false  # 设置时区
      driver-class-name: com.mysql.cj.jdbc.Driver
      # 初始化 最小 最大
      initial-size: 5
      min-idle: 5
      max-active: 20
      # 配置获取连接等待超时的时间
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 'x'
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      # 配置多个英文逗号分隔
      filters: stat,wall
      # WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
      # 是否启用StatFilter默认值true
      web-stat-filter:
        enabled: true
        url-pattern: /*
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"
        session-stat-enable: false
        session-stat-max-count: 1000
        principal-cookie-name: admin
        principal-session-name: admin
        profile-enable: true
      # 根据配置中的url-pattern来访问内置监控页面，如果是上面的配置，内置监控页面的首页是/druid/index.html
      # http://loacalhsot:8081/druid
      stat-view-servlet:
        url-pattern: /druid/*  # 监控页面访问路径
        # 允许清空统计数据
        reset-enable: true
        login-username: admin
        login-password: 123456
          # StatViewSerlvet展示出来的监控信息比较敏感，是系统运行的内部情况，如果你需要做访问控制，可以配置allow和deny这两个参数
          # deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝。如果allow没有配置或者为空，则允许所有访问
          # 配置的格式
          # <IP>
          # 或者<IP>/<SUB_NET_MASK_size>其中128.242.127.1/24
        # 24表示，前面24位是子网掩码，比对的时候，前面24位相同就匹配,不支持IPV6。
  #          allow:
  #          deny:



  security:
    user:
      name: admin
      password: 123456

eureka:
  instance:
    prefer-ip-address: true
    instance-id: ${spring.cloud.client.ip-address}:${server.port}
    hostname: 127.0.0.1 #服务注册中心IP地址
    lease-expiration-duration-in-seconds: 1 # 表示eureka server至上一次收到client的心跳之后，等待下一次心跳的超时时间，在这个时间内若没收到下一次心跳，则将移除该instance。 默认为90秒
    lease-renewal-interval-in-seconds: 1 # 表示eureka client发送心跳给server端的频率。如果在leaseExpirationDurationInSeconds后，server端没有收到client的心跳，则将摘除该instance 默认30秒
  client:
    register-with-eureka: true
    fetch-registry: true
    #    healthcheck:
    #      enabled: true
    serviceUrl:
      #      集群版
      #      defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@eureka.com:9100/eureka/,http://${spring.security.user.name}:${spring.security.user.password}@eureka1.com:9101/eureka/,,http://${spring.security.user.name}:${spring.security.user.password}@eureka2.com:9102/eureka/
      #defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@${eureka.instance.hostname}:9100/eureka/
      defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@${eureka.instance.hostname}:9100/eureka/
